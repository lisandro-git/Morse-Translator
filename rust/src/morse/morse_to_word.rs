use super::*;

pub fn decode(input: String) -> String {
    let text = input.replace("*", ".").trim().to_string();
    let mut result = String::new();
    let words = text.split("/");
    for word in words {
        let chars = word.trim().split(" ");
        for c in chars {
            let letter = match c {
                ".-" => 'a',
                "-..." => 'b',
                "-.-." => 'c',
                "-.." => 'd',
                "." => 'e',
                "..-." => 'f',
                "--." => 'g',
                "...." => 'h',
                ".." => 'i',
                ".---" => 'j',
                "-.-" => 'k',
                ".-.." => 'l',
                "--" => 'm',
                "-." => 'n',
                "---" => 'o',
                ".--." => 'p',
                "--.-" => 'q',
                ".-." => 'r',
                "..." => 's',
                "-" => 't',
                "..-" => 'u',
                "...-" => 'v',
                ".--" => 'w',
                "-..-" => 'x',
                "-.--" => 'y',
                "--.." => 'z',
                "-----" => '0',
                ".----" => '1',
                "..---" => '2',
                "...--" => '3',
                "....-" => '4',
                "....." => '5',
                "-...." => '6',
                "--..." => '7',
                "---.." => '8',
                "----." => '9',
                ".-.-.-" => '.',
                "--..--" => ',',
                "..--.." => '?',
                ".----." => '\'',
                "-.-.--" => '!',
                "-..-." => '/',
                "-.--." => '(',
                "-.--.-" => ')',
                ".-..." => '&',
                "---..." => ':',
                "-.-.-." => ';',
                "-...-" => '=',
                ".-.-." => '+',
                "-....-" => '-',
                "..--.-" => '-',
                ".-..-." => '"',
                "...-..-" => '$',
                ".--.-." => '@',
                "/" => ' ',
                _ => {
                    println!("Could not parse: {}", c);
                    return String::new();
                }
            };
            result.push(letter);
        }
        result.push(' ');
    }
    result.pop();
    return result;
}